{"$message_type":"diagnostic","message":"cannot find derive macro `DeserializeOwned` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/src/lib.rs","byte_start":2880,"byte_end":2940,"line_start":100,"line_end":100,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"pub fn derive_deserialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":61}],"label":"similarly named derive macro `Deserialize` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1819,"byte_end":1835,"line_start":45,"line_end":45,"column_start":38,"column_end":54,"is_primary":true,"text":[{"text":"#[derive(Clone, Copy, PartialEq, Eq, DeserializeOwned)]","highlight_start":38,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`DeserializeOwned` is imported here, but it is only a trait, without a derive macro","code":null,"level":"note","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":1498,"byte_end":1525,"line_start":36,"line_end":36,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"use serde::de::DeserializeOwned;","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"a derive macro with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":1819,"byte_end":1835,"line_start":45,"line_end":45,"column_start":38,"column_end":54,"is_primary":true,"text":[{"text":"#[derive(Clone, Copy, PartialEq, Eq, DeserializeOwned)]","highlight_start":38,"highlight_end":54}],"label":null,"suggested_replacement":"Deserialize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `DeserializeOwned` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:45:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, Copy, PartialEq, Eq, DeserializeOwned)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a derive macro with a similar name exists: `Deserialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/src/lib.rs:100:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn derive_deserialize(input: TokenStream) -> TokenStream {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named derive macro `Deserialize` defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `DeserializeOwned` is imported here, but it is only a trait, without a derive macro\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:36:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde::de::DeserializeOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"impl has stricter requirements than trait","code":{"code":"E0276","explanation":"A trait implementation has stricter requirements than the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0276\ntrait Foo {\n    fn foo<T>(x: T);\n}\n\nimpl Foo for bool {\n    fn foo<T>(x: T) where T: Copy {}\n}\n```\n\nHere, all types implementing `Foo` must have a method `foo<T>(x: T)` which can\ntake any type `T`. However, in the `impl` for `bool`, we have added an extra\nbound that `T` is `Copy`, which isn't compatible with the original trait.\n\nConsider removing the bound from the method or adding the bound to the original\nmethod definition in the trait.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":742,"byte_end":790,"line_start":28,"line_end":28,"column_start":5,"column_end":53,"is_primary":false,"text":[{"text":"    fn leaf<T: Serialize>(item: &T) -> Self::Digest;","highlight_start":5,"highlight_end":53}],"label":"definition of `leaf` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":4623,"byte_end":4634,"line_start":133,"line_end":133,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"        T: IntoFrWords,","highlight_start":12,"highlight_end":23}],"label":"impl has extra requirement `T: IntoFrWords`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0276]\u001b[0m\u001b[0m\u001b[1m: impl has stricter requirements than trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:133:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        T: IntoFrWords,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mimpl has extra requirement `T: IntoFrWords`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/lib.rs:28:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn leaf<T: Serialize>(item: &T) -> Self::Digest;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdefinition of `leaf` from trait\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":5113,"byte_end":5131,"line_start":150,"line_end":150,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"fn squeeze_fr(s: &mut PoseidonSponge<Fr>) -> Fr {","highlight_start":23,"highlight_end":41}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":1},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":1},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":1},{"text":"    + FromStr","highlight_start":1,"highlight_end":1},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":1},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":1},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":1},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":1},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":1},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":1},{"text":"    + Copy","highlight_start":1,"highlight_end":1},{"text":"    + Clone","highlight_start":1,"highlight_end":1},{"text":"    + Debug","highlight_start":1,"highlight_end":1},{"text":"    + Default","highlight_start":1,"highlight_end":1},{"text":"    + Display","highlight_start":1,"highlight_end":1},{"text":"    + Eq","highlight_start":1,"highlight_end":1},{"text":"    + Ord","highlight_start":1,"highlight_end":1},{"text":"    + Send","highlight_start":1,"highlight_end":1},{"text":"    + Sized","highlight_start":1,"highlight_end":1},{"text":"    + Sync","highlight_start":1,"highlight_end":1},{"text":"    + 'static","highlight_start":1,"highlight_end":1},{"text":"    + UniformRand","highlight_start":1,"highlight_end":1},{"text":"    + Zeroize","highlight_start":1,"highlight_end":1},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":1},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":1},{"text":"    + From<u64>","highlight_start":1,"highlight_end":1},{"text":"    + From<u32>","highlight_start":1,"highlight_end":1},{"text":"    + From<u16>","highlight_start":1,"highlight_end":1},{"text":"    + From<u8>","highlight_start":1,"highlight_end":1},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":1},{"text":"    + FromStr","highlight_start":1,"highlight_end":1},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":1},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":1},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":1},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":1},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":1},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":1},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":1},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":1},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":1},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:150:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn squeeze_fr(s: &mut PoseidonSponge<Fr>) -> Fr {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":3783,"byte_end":3801,"line_start":103,"line_end":103,"column_start":35,"column_end":53,"is_primary":true,"text":[{"text":"    fn absorb_into(&self, s: &mut PoseidonSponge<Fr>) {","highlight_start":35,"highlight_end":53}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:103:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn absorb_into(&self, s: &mut PoseidonSponge<Fr>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":3904,"byte_end":3922,"line_start":109,"line_end":109,"column_start":35,"column_end":53,"is_primary":true,"text":[{"text":"    fn absorb_into(&self, s: &mut PoseidonSponge<Fr>) {","highlight_start":35,"highlight_end":53}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:109:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn absorb_into(&self, s: &mut PoseidonSponge<Fr>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4076,"byte_end":4094,"line_start":115,"line_end":115,"column_start":35,"column_end":53,"is_primary":true,"text":[{"text":"    fn absorb_into(&self, s: &mut PoseidonSponge<Fr>) {","highlight_start":35,"highlight_end":53}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:115:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn absorb_into(&self, s: &mut PoseidonSponge<Fr>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":3666,"byte_end":3684,"line_start":98,"line_end":98,"column_start":40,"column_end":58,"is_primary":true,"text":[{"text":"    fn absorb_into(&self, sponge: &mut PoseidonSponge<Fr>);","highlight_start":40,"highlight_end":58}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:98:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn absorb_into(&self, sponge: &mut PoseidonSponge<Fr>);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `absorb` exists for mutable reference `&mut PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":3815,"byte_end":3821,"line_start":104,"line_end":104,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"        s.absorb(&[*self]);","highlight_start":11,"highlight_end":17}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"doesn't satisfy `_: PrimeField`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":811,"byte_end":851,"line_start":30,"line_end":30,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":1,"highlight_end":41}],"label":"doesn't satisfy `_: CryptographicSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\nwhich is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `absorb` exists for mutable reference `&mut PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:104:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        s.absorb(&[*self]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PrimeField`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: CryptographicSponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\u001b[0m\n\u001b[0m            which is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `absorb` exists for mutable reference `&mut PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":3936,"byte_end":3942,"line_start":110,"line_end":110,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"        s.absorb(&[Fr::from(*self as u64)]);","highlight_start":11,"highlight_end":17}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"doesn't satisfy `_: PrimeField`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":811,"byte_end":851,"line_start":30,"line_end":30,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":1,"highlight_end":41}],"label":"doesn't satisfy `_: CryptographicSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\nwhich is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `absorb` exists for mutable reference `&mut PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:110:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        s.absorb(&[Fr::from(*self as u64)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PrimeField`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: CryptographicSponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\u001b[0m\n\u001b[0m            which is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4113,"byte_end":4124,"line_start":116,"line_end":116,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        self.0.absorb_into(s);","highlight_start":16,"highlight_end":27}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:116:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.0.absorb_into(s);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4144,"byte_end":4155,"line_start":117,"line_end":117,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        self.1.absorb_into(s);","highlight_start":16,"highlight_end":27}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:117:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.1.absorb_into(s);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `new` exists for struct `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4684,"byte_end":4687,"line_start":135,"line_end":135,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"        let mut s = PoseidonSponge::<Fr>::new();","highlight_start":43,"highlight_end":46}],"label":"function or associated item cannot be called on `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"doesn't satisfy `_: PrimeField`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":811,"byte_end":851,"line_start":30,"line_end":30,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":1,"highlight_end":41}],"label":"doesn't satisfy `_: CryptographicSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\nwhich is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `new` exists for struct `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:135:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut s = PoseidonSponge::<Fr>::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PrimeField`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: CryptographicSponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\u001b[0m\n\u001b[0m            which is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4662,"byte_end":4682,"line_start":135,"line_end":135,"column_start":21,"column_end":41,"is_primary":true,"text":[{"text":"        let mut s = PoseidonSponge::<Fr>::new();","highlight_start":21,"highlight_end":41}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:135:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut s = PoseidonSponge::<Fr>::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4753,"byte_end":4764,"line_start":137,"line_end":137,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"        item.absorb_into(&mut s);","highlight_start":14,"highlight_end":25}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:137:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        item.absorb_into(&mut s);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4806,"byte_end":4812,"line_start":138,"line_end":138,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"        FrElemDigest(squeeze_fr(&mut s))","highlight_start":33,"highlight_end":39}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:138:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        FrElemDigest(squeeze_fr(&mut s))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `new` exists for struct `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4937,"byte_end":4940,"line_start":142,"line_end":142,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"        let mut s = PoseidonSponge::<Fr>::new();","highlight_start":43,"highlight_end":46}],"label":"function or associated item cannot be called on `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"doesn't satisfy `_: PrimeField`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":811,"byte_end":851,"line_start":30,"line_end":30,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":1,"highlight_end":41}],"label":"doesn't satisfy `_: CryptographicSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\nwhich is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `new` exists for struct `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:142:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut s = PoseidonSponge::<Fr>::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PrimeField`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: CryptographicSponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\u001b[0m\n\u001b[0m            which is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":4915,"byte_end":4935,"line_start":142,"line_end":142,"column_start":21,"column_end":41,"is_primary":true,"text":[{"text":"        let mut s = PoseidonSponge::<Fr>::new();","highlight_start":21,"highlight_end":41}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:142:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut s = PoseidonSponge::<Fr>::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":5063,"byte_end":5069,"line_start":145,"line_end":145,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"        FrElemDigest(squeeze_fr(&mut s))","highlight_start":33,"highlight_end":39}],"label":"the trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `ark_ff` in the dependency graph\n","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs","byte_start":11350,"byte_end":11597,"line_start":351,"line_end":358,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait PrimeField:","highlight_start":1,"highlight_end":22},{"text":"    Field<BasePrimeField = Self>","highlight_start":1,"highlight_end":33},{"text":"    + FftField<FftParams = <Self as PrimeField>::Params>","highlight_start":1,"highlight_end":57},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + From<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + Into<<Self as PrimeField>::BigInt>","highlight_start":1,"highlight_end":41},{"text":"    + From<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1370,"byte_end":1380,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":false,"text":[{"text":"use ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};","highlight_start":5,"highlight_end":15}],"label":"one version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/poseidon_direct.rs","byte_start":1332,"byte_end":1338,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"use ark_ff::{BigInteger, PrimeField};","highlight_start":5,"highlight_end":11}],"label":"one version of crate `ark_ff` used here, as a direct dependency of the current crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs","byte_start":23349,"byte_end":24276,"line_start":896,"line_end":936,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub trait BigInteger:","highlight_start":1,"highlight_end":22},{"text":"    CanonicalSerialize","highlight_start":1,"highlight_end":23},{"text":"    + CanonicalDeserialize","highlight_start":1,"highlight_end":27},{"text":"    + Copy","highlight_start":1,"highlight_end":11},{"text":"    + Clone","highlight_start":1,"highlight_end":12},{"text":"    + Debug","highlight_start":1,"highlight_end":12},{"text":"    + Default","highlight_start":1,"highlight_end":14},{"text":"    + Display","highlight_start":1,"highlight_end":14},{"text":"    + Eq","highlight_start":1,"highlight_end":9},{"text":"    + Ord","highlight_start":1,"highlight_end":10},{"text":"    + Send","highlight_start":1,"highlight_end":11},{"text":"    + Sized","highlight_start":1,"highlight_end":12},{"text":"    + Sync","highlight_start":1,"highlight_end":11},{"text":"    + 'static","highlight_start":1,"highlight_end":14},{"text":"    + UniformRand","highlight_start":1,"highlight_end":18},{"text":"    + Zeroize","highlight_start":1,"highlight_end":14},{"text":"    + AsMut<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + AsRef<[u64]>","highlight_start":1,"highlight_end":19},{"text":"    + From<u64>","highlight_start":1,"highlight_end":16},{"text":"    + From<u32>","highlight_start":1,"highlight_end":16},{"text":"    + From<u16>","highlight_start":1,"highlight_end":16},{"text":"    + From<u8>","highlight_start":1,"highlight_end":15},{"text":"    + TryFrom<BigUint, Error = ()>","highlight_start":1,"highlight_end":35},{"text":"    + FromStr","highlight_start":1,"highlight_end":14},{"text":"    + Into<BigUint>","highlight_start":1,"highlight_end":20},{"text":"    + BitXorAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitXorAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitXor<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitXor<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitAndAssign<Self>","highlight_start":1,"highlight_end":25},{"text":"    + for<'a> BitAndAssign<&'a Self>","highlight_start":1,"highlight_end":37},{"text":"    + BitAnd<Self, Output = Self>","highlight_start":1,"highlight_end":34},{"text":"    + for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":1,"highlight_end":46},{"text":"    + BitOrAssign<Self>","highlight_start":1,"highlight_end":24},{"text":"    + for<'a> BitOrAssign<&'a Self>","highlight_start":1,"highlight_end":36},{"text":"    + BitOr<Self, Output = Self>","highlight_start":1,"highlight_end":33},{"text":"    + for<'a> BitOr<&'a Self, Output = Self>","highlight_start":1,"highlight_end":45},{"text":"    + Shr<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShrAssign<u32>","highlight_start":1,"highlight_end":21},{"text":"    + Shl<u32, Output = Self>","highlight_start":1,"highlight_end":30},{"text":"    + ShlAssign<u32>","highlight_start":1,"highlight_end":21}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PoseidonSponge`","code":null,"level":"note","spans":[{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":840,"byte_end":850,"line_start":30,"line_end":30,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":30,"highlight_end":40}],"label":"required by this bound in `PoseidonSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:145:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        FrElemDigest(squeeze_fr(&mut s))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ark_ff::fields::PrimeField` is not implemented for `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: there are \u001b[0m\u001b[0m\u001b[1m\u001b[35mmultiple different versions\u001b[0m\u001b[0m of crate `\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_ff\u001b[0m\u001b[0m` in the dependency graph\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.3.0/src/fields/mod.rs:351:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PrimeField:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Field<BasePrimeField = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FftField<FftParams = <Self as PrimeField>::Params>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + From<BigUint>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Into<BigUint>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|___________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis is the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type doesn't implement the required trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/poseidon_direct.rs:33:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_ff::{BigInteger, PrimeField};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a direct dependency of the current crate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0muse ark_sponge::{poseidon::PoseidonSponge, CryptographicSponge};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mone version of crate `ark_ff` used here, as a dependency of crate `ark_sponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/biginteger/mod.rs:896:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BigInteger:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CanonicalSerialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + CanonicalDeserialize\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m935\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is the found trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: you can use `\u001b[0m\u001b[0m\u001b[1m\u001b[35mcargo tree\u001b[0m\u001b[0m` to explore your dependency tree\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PoseidonSponge`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PoseidonSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `squeeze_field_elements` exists for mutable reference `&mut PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/poseidon_direct.rs","byte_start":5147,"byte_end":5169,"line_start":151,"line_end":151,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"    s.squeeze_field_elements(1)[0]","highlight_start":7,"highlight_end":29}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs","byte_start":3805,"byte_end":3850,"line_start":106,"line_end":106,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"pub struct Fp<P: FpConfig<N>, const N: usize>(","highlight_start":1,"highlight_end":46}],"label":"doesn't satisfy `_: PrimeField`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs","byte_start":811,"byte_end":851,"line_start":30,"line_end":30,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"pub struct PoseidonSponge<F: PrimeField> {","highlight_start":1,"highlight_end":41}],"label":"doesn't satisfy `_: CryptographicSponge`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\nwhich is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `squeeze_field_elements` exists for mutable reference `&mut PoseidonSponge<Fp<MontBackend<FrConfig, 4>, 4>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/poseidon_direct.rs:151:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    s.squeeze_field_elements(1)[0]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-ff-0.5.0/src/fields/models/fp/mod.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Fp<P: FpConfig<N>, const N: usize>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PrimeField`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/harjasleenmalvai/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-sponge-0.3.0/src/poseidon/mod.rs:30:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PoseidonSponge<F: PrimeField> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: CryptographicSponge`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `ark_ff::Fp<MontBackend<FrConfig, 4>, 4>: ark_ff::fields::PrimeField`\u001b[0m\n\u001b[0m            which is required by `PoseidonSponge<ark_ff::Fp<MontBackend<FrConfig, 4>, 4>>: CryptographicSponge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":189,"byte_end":194,"line_start":7,"line_end":7,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{Read, Write};","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:7:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Read, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 19 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 19 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0276, E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0276, E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0276`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0276`.\u001b[0m\n"}
